#This file builds the Docker images for a React/NodeJS application and runs it as microservices on Docker containers

#To ensure successful execution, clone this entire repository and execute this file while in the root folder of the cloned repository

#It's also a requirement to have Docker and the docker-compose plugin installed in your environment

#To launch this app without having to clone the entire repository,use the docker-compose.yaml file to run the app

services:

  #Builds the frontend Docker image and creates the frontend microservice
  nyange-yolo-client:
    image: majangajohn/nyange-yolo-client:v1.0.0
    build: 
      context: ./client
    container_name: nyange-yolo-client
    stdin_open: true
    tty: true
    ports:
      - "3000:3000"
    environment:
      - NODE_OPTIONS=--openssl-legacy-provider # enables legacy crypto for webpack)
    depends_on: 
      - nyange-yolo-backend
    networks:
      - yolo-net

  #Builds the backend Docker image and creates the backend microservice
  nyange-yolo-backend:
    image: majangajohn/nyange-yolo-backend:v1.0.0
    build: 
      context: ./backend
    container_name: nyange-yolo-backend
    stdin_open: true
    tty: true
    restart: always
    ports:
      - "5000:5000"
    environment:
      - MONGODB_URI=mongodb://app-ip-mongo:27017/yolomy
    depends_on: 
      - app-ip-mongo
    networks:
      - yolo-net

  #Creates the database microservice
  app-ip-mongo:
    image: mongo:5.0
    container_name: app-mongo
    ports:
      - "27017:27017"
    networks:
      - yolo-net
    volumes:
      - type: volume
        source: app-mongo-data
        target: /data/db

#Creates the network infrastructure necessary for the containers to communicate with each other
networks:
  yolo-net:
    name: yolo-net
    driver: bridge
    attachable: true
    ipam:
      config:
        - subnet: 172.20.0.0/16 
          ip_range: 172.20.0.0/16  # fall back to default if the subnet is taken

#Creates a Docker volume that persists all the data stored in the database
volumes:
  app-mongo-data:
    driver: local